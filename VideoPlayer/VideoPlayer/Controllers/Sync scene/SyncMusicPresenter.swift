//
//  SyncMusicPresenter.swift
//  VideoPlayer
//
//  Created by Sergey Pohrebnuak on 03.02.2021.
//  Copyright (c) 2021 Sergey Pohrebnuak. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SyncMusicPresentationLogic {
    func updateSyncInfo(response: SyncMusic.Sync.Response)
}

final class SyncMusicPresenter: SyncMusicPresentationLogic {
    
    weak var viewController: SyncMusicDisplayLogic?
    
    // MARK: Do something
    func updateSyncInfo(response: SyncMusic.Sync.Response) {
        let syncState = response.syncState
        var displayArray = [SyncMusic.Sync.SyncDisplayModel]()
        
        let fetchFromLocalDBTitle = "Fetch from local Data Base"
        let fetchFromLocalDB = SyncMusic.Sync.SyncDisplayModel(currentSyncState: syncState.fetchFromLocalDB,
                                                               description: fetchFromLocalDBTitle)
        displayArray.append(fetchFromLocalDB)
        
        let fetchFromCloudTitle = "Fetch from local cloud"
        let fetchFromCloud = SyncMusic.Sync.SyncDisplayModel(currentSyncState: syncState.fetchFromCloud,
                                                             description: fetchFromCloudTitle)
        displayArray.append(fetchFromCloud)
        
        let fetchFromLocalStorageTitle = "Check new items on device"
        let fetchFromLocalStorage = SyncMusic.Sync.SyncDisplayModel(currentSyncState: syncState.fetchFromLocalStorage,
                                                                    description: fetchFromLocalStorageTitle)
        displayArray.append(fetchFromLocalStorage)
        
        let saveNewDataTitle = "Save new data"
        let saveNewData = SyncMusic.Sync.SyncDisplayModel(currentSyncState: syncState.allDone,
                                                                    description: saveNewDataTitle)
        displayArray.append(saveNewData)
        
        let viewModel = SyncMusic.Sync.ViewModel(arrayOfSyncProcessModel: displayArray)
        viewController?.displaySyncState(viewModel: viewModel)
    }
}
